
//DUT
/*
contains memory and  associated read and write logic. Use modports
*/

module mem();


endmodule // mem






//Interface 
/*
modport for DUT. modport used to check any violation on port direction
modport for TB . 
*/

interface mem_if(input bit clk);

   logic [3:0 ] wr_addr, rd_addr;
   logic [7:0] 	wr_data, rd_data;
   logic 	wren, rden, ovalid;

   modport if_DUT(input wr_addr, rd_addr, wren, rden, wr_data, clk, output rd_data, output ovalid);

   modport if_TB();
   

endinterface // mem_if






//Program



//Driver class
/*
 later sequence can be added 
 currently add write followed by read
*/

//Monitor class
/*
read data from output interface when its valid
*/



//Scoreboard class
//Get and compare data from o/p and i/p interfaces.

