

CHAPTERS:

1. CHAPTER 1








1. CHAPTER 1 [Ref : http://www.icverification.com/Resources/InterviewQs.php]

Before going over the following interview questions, here are some tips of dos and donts for your interview:

    Make sure your resume captures everything that you know, have done and achieved, nothing more, nothing less.
    If you are putting keywords on your resume to catch attention of recruiters, make sure you back yourself on those keywords. Otherwise, they can backfire in the interview.
    Fresh college grads must brush up on their engineering basics, especially their thesis and projects
    Avoid saying ¡°I did this x years ago, so I don¡¯t remember¡±. If its there on your resume, you are accountable for it. If you don¡¯t remember, remove it from your resume.

Interview questions for a verification engineer position are typically divided into 5 categories:

    Programming Concepts : Test of relevant programming languages like Verilog, System Verilog, OVM, UVM, Assembly, Perl.

    Digital logic : This is where most of engineering knowledge applies. Questions related to digital logic like flops, latches, clock dividers, FSMs, Sequential and combinational circuits

    Verification Concepts Test of verification knowledge and experience

    Architecture knowledge (depending on the company this could be bus architecture, processor architecture, bus protocols etc)

    Aptitude: Test of your problem solving skills. Sometimes the aptitude and programing questions are combined into one. You are asked to solve a aptitude question using a program.

vvvvvvvvvvvvvvvvvvvvvvvvvvvv
    Programming Concepts
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    (Verilog): What is difference between blocking and non-blocking statements? Discuss with example.
    http://www.asic-world.com/tidbits/blocking.html

    (Verilog): What are different ways to code a mux in verilog?

        Wire select, a,b,y
        If (select)
          Y = a;
        Else
          Y = b;

        Y = select ? a : b;

        Y = (select & a) | (~select & b);

        Case (select)
        1 : y = a;
        0 : y = b;
        Default : y = 1¡¯bx;
    (OOP): Discuss inheritance, virtual function, polymorphism.
    http://www.slideshare.net/bgjeecourse/objectoriented-concepts-5576132

    Write a function to determine whether a given number is prime number.

    void PrimeNumber () {
      int num;
      printf (¡°Enter a number: ¡°);
      scanf (¡°%d¡±, num);
    // 1 and even numbers are not prime
    if ((num == 1) || (num%2 == 0)) {
      printf (¡°Number is not prime¡±);
      return;
    }

    for (int i = 3; i < squareroot (num); i=i+2) {
       if (num % i == 0) {
         printf (¡°Number is not prime¡±);
         return;
       }
    }

    printf (¡°Number is prime¡±);
    return;
    }
    
vvvvvvvvvvvvvvvvv
Digital Logic
^^^^^^^^^^^^^^^^^^^

    What is difference between flop and latch?
    Latches are level sensitive i.e. the output captures the input when the clock signal is high, so as long as the clock is logic 1, the output can change if the input also changes.
    Flip-Flops are edge sensitive i.e. flip flop will store the input only when there is a rising or falling edge of the clock.

    How can do design a flip from from one or more latches?

    What are different types of flip flops?

    How do you design a divide-by-2 clock circuit?

    Clock-domain-crossing : What is the basic circuit for passing signals from one clock domain to another?
    http://eetimes.com/design/eda-design/4018520/Understanding-Clock-Domain-Crossing-Issues

    What is the minimum depth of fifo required given clock freq A = x and clock freq B = y?

    What is the difference between asynchronous and synchronous reset?
    http://www.sunburst-design.com/papers/CummingsSNUG2003Boston_Resets.pdf 


vvvvvvvvvvvvvvvvvvvvvvvvvv
Verification Concepts
^^^^^^^^^^^^^^^^^^^^^^^^

    Describe the steps in the verification of a design

    How do you know that verification is done?

    What is coverage? What are the different types of coverage?

    A small DUT given (like an adder or one part of bus protocol) and asked to design verification plan.

    Given that you have to work from scratch, which methodology would you use for your verification plan and why?

vvvvvvvvvvvvvvvvvvv
CPU Architecture
^^^^^^^^^^^^^^^^^^^^

    What are the pipeline stages of a simple single-pipeline processor?

    What are the hazards of pipeline? How do you overcome the hazards

    What is RISC vs CISC processor?

    (Advanced) Describe a super-scalar architecture

    What is cache coherency? How is it maintained?

    Why do you do out-of-order execution but in-order retire?

vvvvvvvvvvvvvvvv
Aptitude
^^^^^^^^^^^^^^^^^

These are general puzzle type questions. Some sample questions:

    100 door problem :
    There are 100 doors in a room, all are in open position to begin with. A person goes and flips the position on all doors in the first pass (i.e. all doors become closed now). In the second pass, the person flips the position of doors which are multiples of 2 (so alternate doors are open now), in third pass, he flips position of all doors which are multiples of 3 and so on, till he has done 100 passes. What is the final position of the doors?

    Infinite coin problem (flip)
    There are infinite coins on a table. All coins are tails up, i.e. you can see tails of all coins except 20 coins which are heads up. You are blind folded. You cannot feel the coins. You need to pick coins from this table and put them on another empty table such that when you are done, both tables have equal number of heads up. How do you do this?

    Missing number problem
    There is an array of numbers from 1 to 1000. One number is missing. What is the best way to find which number is missing?






